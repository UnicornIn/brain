name: Deploy to AWS EC2

on:
  push:
    branches: [ staging ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Set up job
      run: echo "Starting deployment to AWS EC2"

    - name: Checkout code
      uses: actions/checkout@v3
      with:
        ref: staging

    - name: Setup SSH Key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.AWS_PRIVATE_KEY }}" > ~/.ssh/aws_key.pem
        chmod 600 ~/.ssh/aws_key.pem

    - name: Deploy App to EC2
      run: |
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/aws_key.pem ${{ secrets.AWS_USER }}@${{ secrets.AWS_HOST }} 'bash -s' <<'ENDSSH'
          set -e
          PROJECT_PATH="/home/${{ secrets.AWS_USER }}/brain/Backend"
          APP_DOMAIN="https://staging-brain.rizosfelices.co"
          
          # Si el proyecto no existe, cl√≥nalo
          if [ ! -d "$PROJECT_PATH" ]; then
            mkdir -p /home/${{ secrets.AWS_USER }}
            cd /home/${{ secrets.AWS_USER }}
            git clone https://github.com/UnicornIn/brain.git brain
          fi
          
          cd $PROJECT_PATH
          
          # Limpiar cualquier cambio local y actualizar
          git clean -fd
          git reset --hard HEAD
          
          # Fetch todas las ramas y tags
          git fetch --all --prune
          
          # Verificar que la rama staging existe en el remoto
          if git ls-remote --heads origin | grep -q "refs/heads/staging"; then
            echo "‚úÖ Rama staging encontrada en el remoto"
            # Cambiar a staging (crear si no existe localmente)
            git checkout staging 2>/dev/null || git checkout -b staging
            # Configurar el tracking y hacer pull
            git branch --set-upstream-to=origin/staging staging
            git reset --hard origin/staging
          else
            echo "‚ùå Error: La rama staging no existe en el remoto"
            echo "üìã Ramas disponibles en el remoto:"
            git ls-remote --heads origin
            exit 1
          fi
          
          # Crear archivo .env con variables de entorno
          echo "MONGODB_URI=${{ secrets.MONGODB_URI }}" > .env
          echo "MANYCHAT_API_KEY=${{ secrets.MANYCHAT_API_KEY }}" >> .env
          echo "ACCESS_TOKEN_EXPIRE_MINUTES=${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }}" >> .env
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
          echo "OPENAI_KNOWLEDGE_AGENT_ID=${{ secrets.OPENAI_KNOWLEDGE_AGENT_ID }}" >> .env
          echo "OPENAI_CUSTOMER_AGENT_ID=${{ secrets.OPENAI_CUSTOMER_AGENT_ID }}" >> .env
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> .env
          echo "OPENAI_VECTOR_STORE_ID=${{ secrets.OPENAI_VECTOR_STORE_ID }}" >> .env
          echo "CORREO_REMITENTE=${{ secrets.CORREO_REMITENTE }}" >> .env
          echo "CONTRASENA_APLICACION=${{ secrets.CONTRASENA_APLICACION }}" >> .env
          
          # Crear entorno virtual si no existe
          if [ ! -d "venv" ]; then
            python3 -m venv venv
          fi
          
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          
          # Detener cualquier proceso anterior de run.py
          pkill -f "python run.py" || true
          
          # Levantar la app en background
          nohup python run.py > log.txt 2>&1 &
          
          # Esperar 5 segundos para dar tiempo a que arranque
          sleep 5
          
          # Verificar si la app est√° corriendo desde el dominio
          if curl -sk --max-time 10 "$APP_DOMAIN" > /dev/null; then
            echo "‚úÖ La app est√° corriendo correctamente en $APP_DOMAIN"
          else
            echo "‚ùå Error: la app no respondi√≥ en $APP_DOMAIN"
            echo "üîç Mostrando las √∫ltimas 20 l√≠neas de log.txt:"
            tail -n 20 log.txt || echo "No hay log disponible"
            exit 1
          fi
        ENDSSH

    - name: Post Checkout code
      run: echo "Deployment process completed"

    - name: Complete job
      run: echo "‚úÖ Deployment to AWS EC2 completed successfully"
